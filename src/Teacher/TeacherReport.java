/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Teacher;

import java.awt.Color;
import java.awt.List;
import static java.lang.Math.round;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class TeacherReport extends javax.swing.JFrame {

    private static final String username = "root";
    private static final String pass = "root";
    private static final String url = "jdbc:mysql://localhost:3307/mini_project";
    
   ResultSet rs = null;
   ResultSet rs1 = null;
   
   
   String s;
   String s2;
    public TeacherReport(String login,String id) {
        initComponents();
        
        
       this.s = login;
       this.s2 = id;
        
    jTableReport.setOpaque(false);
    ((DefaultTableCellRenderer)jTableReport.getDefaultRenderer(Object.class)).setOpaque(false);
    jTableReport.setShowGrid(true);
    
    jScrollPane1.setOpaque(false);
    jScrollPane1.getViewport().setOpaque(false);
    
     try
       {
           String sql1 = "select * from batch";
           Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           PreparedStatement pst = conn.prepareStatement(sql1);
           Vector test = new Vector();
           rs = pst.executeQuery();
           while(rs.next())
           {
               jComboBoxBatchCode.addItem(rs.getString("batch_code"));
               
           }
           
           
       }
        
        catch(SQLException e)
       {
           System.out.println(e);
       }  
     
     try
       {
           String sql1 = "select * from attendance";
           Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           PreparedStatement pst = conn.prepareStatement(sql1);
           
           Vector test = new Vector();
           
           
           
           rs = pst.executeQuery();
           while(rs.next())
           {
               test.add(rs.getString("stud_name"));
               
           }
           for(int i=0;i<test.size();i++) {
             for(int j=0;j<test.size();j++) {
                 if(i!=j) {
                     if(test.elementAt(i).equals(test.elementAt(j))) {
                     test.removeElementAt(j);
                         
                      }
                    }
            }
        }
        for(int i=0;i<test.size();i++) 
        {
            jComboBoxStudentName.addItem((String)test.elementAt(i));
        }
           
           
       }
        
        catch(SQLException e)
       {
           System.out.println(e);
       }  
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonAttendance = new javax.swing.JButton();
        jButtonReport = new javax.swing.JButton();
        jButtonDetails = new javax.swing.JButton();
        jButtonLogOut = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabelBatchCode = new javax.swing.JLabel();
        jComboBoxBatchCode = new javax.swing.JComboBox<>();
        jLabelDate = new javax.swing.JLabel();
        jLabelStudName = new javax.swing.JLabel();
        jComboBoxStudentName = new javax.swing.JComboBox<>();
        jButtonFilter = new javax.swing.JButton();
        jButtonShowAll = new javax.swing.JButton();
        jButtonClearTable = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReport = new javax.swing.JTable();
        jTextFieldDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldPresent = new javax.swing.JTextField();
        jTextFieldAbsent = new javax.swing.JTextField();
        jTextFieldPercentage = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDesktopPane1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Teacher/Images/IMG_9761.PNG"))); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(40, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Dashboard");
        jLabel2.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        jButtonAttendance.setText("Give Attendance");
        jButtonAttendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAttendanceActionPerformed(evt);
            }
        });

        jButtonReport.setText("Report");
        jButtonReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReportActionPerformed(evt);
            }
        });

        jButtonDetails.setText("Details");
        jButtonDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDetailsActionPerformed(evt);
            }
        });

        jButtonLogOut.setText("Log Out");
        jButtonLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButtonDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButtonAttendance, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
            .addComponent(jButtonReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButtonLogOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addComponent(jButtonAttendance)
                .addGap(35, 35, 35)
                .addComponent(jButtonReport)
                .addGap(35, 35, 35)
                .addComponent(jButtonDetails)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                .addComponent(jButtonLogOut)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Report");

        jLabelBatchCode.setText("Batch Code:");

        jComboBoxBatchCode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        jComboBoxBatchCode.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBoxBatchCodePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jComboBoxBatchCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBatchCodeActionPerformed(evt);
            }
        });

        jLabelDate.setText("Date:");

        jLabelStudName.setText("Student Name:");

        jComboBoxStudentName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));

        jButtonFilter.setText("Filter");
        jButtonFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFilterActionPerformed(evt);
            }
        });

        jButtonShowAll.setText("Show All");
        jButtonShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowAllActionPerformed(evt);
            }
        });

        jButtonClearTable.setText("Clear ");
        jButtonClearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearTableActionPerformed(evt);
            }
        });

        jTableReport.setForeground(new java.awt.Color(255, 255, 255));
        jTableReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Batch Code", "Student ID", "Student Name", "Attendance", "Date"
            }
        ));
        jScrollPane1.setViewportView(jTableReport);
        if (jTableReport.getColumnModel().getColumnCount() > 0) {
            jTableReport.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        jTextFieldDate.setForeground(new java.awt.Color(153, 153, 153));
        jTextFieldDate.setText("YYYY-MM-DD");
        jTextFieldDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldDateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldDateFocusLost(evt);
            }
        });

        jLabel4.setText("Total Present:");

        jLabel5.setText("Total Absent:");

        jLabel7.setText("Percentage:");

        jTextFieldPresent.setEditable(false);

        jTextFieldAbsent.setEditable(false);

        jTextFieldPercentage.setEditable(false);

        jLabel8.setForeground(new java.awt.Color(0, 255, 255));
        jLabel8.setText("For Individual Students Only");

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabelBatchCode, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jComboBoxBatchCode, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabelDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabelStudName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jComboBoxStudentName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButtonFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButtonShowAll, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButtonClearTable, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jTextFieldDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jTextFieldPresent, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jTextFieldAbsent, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jTextFieldPercentage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jLabel4)
                        .addGap(9, 9, 9)
                        .addComponent(jTextFieldPresent, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabelBatchCode))
                            .addComponent(jLabelDate))
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jComboBoxBatchCode, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(94, 94, 94)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(13, 13, 13)
                                .addComponent(jTextFieldAbsent, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel8))))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabelStudName)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(jLabel7)
                        .addGap(22, 22, 22)
                        .addComponent(jTextFieldPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(jButtonFilter))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jButtonShowAll)
                        .addGap(220, 220, 220)
                        .addComponent(jButtonClearTable)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel3)
                .addGap(7, 7, 7)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldPresent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabelBatchCode)
                        .addGap(24, 24, 24)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDate)
                            .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jComboBoxBatchCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldAbsent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)))
                .addGap(10, 10, 10)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabelStudName))
                    .addComponent(jComboBoxStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel7))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jTextFieldPercentage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addComponent(jButtonFilter)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonShowAll)
                    .addComponent(jButtonClearTable)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDetailsActionPerformed
        new TeacherDetails(s,s2).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonDetailsActionPerformed

    private void jButtonLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLogOutActionPerformed
        new TeacherLogin().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonLogOutActionPerformed

    private void jComboBoxBatchCodePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBoxBatchCodePopupMenuWillBecomeInvisible

    }//GEN-LAST:event_jComboBoxBatchCodePopupMenuWillBecomeInvisible

    private void jComboBoxBatchCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBatchCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxBatchCodeActionPerformed

    private void jButtonFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFilterActionPerformed
       
        if(jComboBoxBatchCode.getSelectedItem()!="Select" && jComboBoxStudentName.getSelectedItem()=="Select" && jTextFieldDate.getText().equals("YYYY-MM-DD"))
        {
        try
        {
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select * from attendance where batch_code=?";
           PreparedStatement st = conn.prepareStatement(sql);
           st.setString(1, (String)jComboBoxBatchCode.getSelectedItem());
           ResultSet rs = st.executeQuery();
           
           DefaultTableModel model = (DefaultTableModel)jTableReport.getModel();
        while(model.getRowCount()>0)
        {
            for(int i = 0;i<model.getRowCount();i++)
            {
                model.removeRow(i);
            }
        }
           
           while(rs.next())
           {
               String batch = rs.getString("batch_code");
               String stud_id = rs.getString("stud_id");
               String stud_name = rs.getString("stud_name");
               String att = rs.getString("stud_attendance");
               String date = rs.getString("date");
               
               String tbData[] = {batch,stud_id,stud_name,att,date};
               DefaultTableModel tblModel = (DefaultTableModel)jTableReport.getModel();
               
               //Add data
               tblModel.addRow(tbData);
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        try
        {
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select count(*) from attendance where stud_attendance='Present' and batch_code = ?";
           PreparedStatement st = conn.prepareStatement(sql);
           st.setString(1,(String)jComboBoxBatchCode.getSelectedItem());
           ResultSet rs = st.executeQuery();
           while(rs.next())
           {
               jTextFieldPresent.setText(rs.getString("count(*)"));
           }
           
           String sql1 = "select count(*) from attendance where stud_attendance='Absent' and batch_code = ?";
           PreparedStatement st1 = conn.prepareStatement(sql1);
           st1.setString(1,(String)jComboBoxBatchCode.getSelectedItem());
           ResultSet rs1 = st1.executeQuery();
           while(rs1.next())
           {
               jTextFieldAbsent.setText(rs1.getString("count(*)"));
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        }
        
        else if(jComboBoxStudentName.getSelectedItem()!="Select" && jComboBoxBatchCode.getSelectedItem()=="Select" && jTextFieldDate.getText().equals("YYYY-MM-DD"))
        {
        try
        {
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select * from attendance where stud_name=?";
           PreparedStatement st = conn.prepareStatement(sql);
           st.setString(1, (String)jComboBoxStudentName.getSelectedItem());
           ResultSet rs = st.executeQuery();
           
           DefaultTableModel model = (DefaultTableModel)jTableReport.getModel();
        while(model.getRowCount()>0)
        {
            for(int i = 0;i<model.getRowCount();i++)
            {
                model.removeRow(i);
            }
        }
           
           while(rs.next())
           {
               String batch = rs.getString("batch_code");
               String stud_id = rs.getString("stud_id");
               String stud_name = rs.getString("stud_name");
               String att = rs.getString("stud_attendance");
               String date = rs.getString("date");
               
               String tbData[] = {batch,stud_id,stud_name,att,date};
               DefaultTableModel tblModel = (DefaultTableModel)jTableReport.getModel();
               
               //Add data
               tblModel.addRow(tbData);
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        int p,a,c;
        double r,d;
        try
        {
            
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select count(*) from attendance where stud_attendance='Present' and stud_name = ?";
           PreparedStatement st = conn.prepareStatement(sql);
           st.setString(1,(String)jComboBoxStudentName.getSelectedItem());
           ResultSet rs = st.executeQuery();
           while(rs.next())
           {
               jTextFieldPresent.setText(rs.getString("count(*)"));
               //p = Integer.parseInt(rs.getString("count(*)"));
           }
           
           String sql1 = "select count(*) from attendance where stud_attendance='Absent' and stud_name = ?";
           PreparedStatement st1 = conn.prepareStatement(sql1);
           st1.setString(1,(String)jComboBoxStudentName.getSelectedItem());
           ResultSet rs1 = st1.executeQuery();
           while(rs1.next())
           {
               jTextFieldAbsent.setText(rs1.getString("count(*)"));
               //a = Integer.parseInt(rs1.getString("count(*)"));
           }
           p = Integer.parseInt(jTextFieldPresent.getText());
           a = Integer.parseInt(jTextFieldAbsent.getText());
           c = p+a;
           d =(p*100.0);
           r= d/c;
           
           jTextFieldPercentage.setText(String.valueOf(r)+"%");
           //System.out.println(r);
        }
        
        
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
        }
        
        else if(jTextFieldDate!=null && jComboBoxBatchCode.getSelectedItem()=="Select" && jComboBoxStudentName.getSelectedItem()=="Select")
        {
        try
        {
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select * from attendance where date=?";
           PreparedStatement st = conn.prepareStatement(sql);
           
           st.setString(1, jTextFieldDate.getText());
           ResultSet rs = st.executeQuery();
           
           DefaultTableModel model = (DefaultTableModel)jTableReport.getModel();
        while(model.getRowCount()>0)
        {
            for(int i = 0;i<model.getRowCount();i++)
            {
                model.removeRow(i);
            }
        }
           
           while(rs.next())
           {
               String batch = rs.getString("batch_code");
               String stud_id = rs.getString("stud_id");
               String stud_name = rs.getString("stud_name");
               String att = rs.getString("stud_attendance");
               String date = rs.getString("date");
               
               String tbData[] = {batch,stud_id,stud_name,att,date};
               DefaultTableModel tblModel = (DefaultTableModel)jTableReport.getModel();
               
               //Add data
               tblModel.addRow(tbData);
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
        try
        {
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select count(*) from attendance where stud_attendance='Present' and date = ?";
           PreparedStatement st = conn.prepareStatement(sql);
           st.setString(1,jTextFieldDate.getText());
           ResultSet rs = st.executeQuery();
           while(rs.next())
           {
               jTextFieldPresent.setText(rs.getString("count(*)"));
           }
           
           String sql1 = "select count(*) from attendance where stud_attendance='Absent' and date = ?";
           PreparedStatement st1 = conn.prepareStatement(sql1);
           st1.setString(1,jTextFieldDate.getText());
           ResultSet rs1 = st1.executeQuery();
           while(rs1.next())
           {
               jTextFieldAbsent.setText(rs1.getString("count(*)"));
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
     
        }
        
        else if(jComboBoxStudentName.getSelectedItem()!="Select" && jComboBoxBatchCode.getSelectedItem()!="Select" && jTextFieldDate.getText().equals("YYYY-MM-DD"))
        {
        try
        {
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select * from attendance where batch_code=? and stud_name=?";
           PreparedStatement st = conn.prepareStatement(sql);
           
           st.setString(1, (String)jComboBoxBatchCode.getSelectedItem());
           st.setString(2, (String)jComboBoxStudentName.getSelectedItem());
           ResultSet rs = st.executeQuery();
           
           DefaultTableModel model = (DefaultTableModel)jTableReport.getModel();
        while(model.getRowCount()>0)
        {
            for(int i = 0;i<model.getRowCount();i++)
            {
                model.removeRow(i);
            }
        }
           
           while(rs.next())
           {
               String batch = rs.getString("batch_code");
               String stud_id = rs.getString("stud_id");
               String stud_name = rs.getString("stud_name");
               String att = rs.getString("stud_attendance");
               String date = rs.getString("date");
               
               String tbData[] = {batch,stud_id,stud_name,att,date};
               DefaultTableModel tblModel = (DefaultTableModel)jTableReport.getModel();
               
               //Add data
               tblModel.addRow(tbData);
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
        try
        {
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select count(*) from attendance where stud_attendance='Present' and batch_code = ? and stud_name=?";
           PreparedStatement st = conn.prepareStatement(sql);
           st.setString(1,(String)jComboBoxBatchCode.getSelectedItem());
           st.setString(2,(String)jComboBoxStudentName.getSelectedItem());
           ResultSet rs = st.executeQuery();
           while(rs.next())
           {
               jTextFieldPresent.setText(rs.getString("count(*)"));
           }
           
           String sql1 = "select count(*) from attendance where stud_attendance='Absent' and batch_code = ? and stud_name=?";
           PreparedStatement st1 = conn.prepareStatement(sql1);
           st1.setString(1,(String)jComboBoxBatchCode.getSelectedItem());
           st1.setString(2,(String)jComboBoxStudentName.getSelectedItem());
           ResultSet rs1 = st1.executeQuery();
           while(rs1.next())
           {
               jTextFieldAbsent.setText(rs1.getString("count(*)"));
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
        
        
        
        
        }
        
        else if(jComboBoxStudentName.getSelectedItem()=="Select" && jComboBoxBatchCode.getSelectedItem()!="Select" && jTextFieldDate!=null)
        {
        try
        {
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select * from attendance where batch_code=? and date=?";
           PreparedStatement st = conn.prepareStatement(sql);
           
           st.setString(1, (String)jComboBoxBatchCode.getSelectedItem());
           st.setString(2, jTextFieldDate.getText());
           ResultSet rs = st.executeQuery();
           
           DefaultTableModel model = (DefaultTableModel)jTableReport.getModel();
        while(model.getRowCount()>0)
        {
            for(int i = 0;i<model.getRowCount();i++)
            {
                model.removeRow(i);
            }
        }
           
           while(rs.next())
           {
               String batch = rs.getString("batch_code");
               String stud_id = rs.getString("stud_id");
               String stud_name = rs.getString("stud_name");
               String att = rs.getString("stud_attendance");
               String date = rs.getString("date");
               
               String tbData[] = {batch,stud_id,stud_name,att,date};
               DefaultTableModel tblModel = (DefaultTableModel)jTableReport.getModel();
               
               //Add data
               tblModel.addRow(tbData);
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
        try
        {
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select count(*) from attendance where stud_attendance='Present' and batch_code = ? and date=?";
           PreparedStatement st = conn.prepareStatement(sql);
           st.setString(1,(String)jComboBoxBatchCode.getSelectedItem());
           st.setString(2,jTextFieldDate.getText());
           ResultSet rs = st.executeQuery();
           while(rs.next())
           {
               jTextFieldPresent.setText(rs.getString("count(*)"));
           }
           
           String sql1 = "select count(*) from attendance where stud_attendance='Absent' and batch_code = ? and date=?";
           PreparedStatement st1 = conn.prepareStatement(sql1);
           st1.setString(1,(String)jComboBoxBatchCode.getSelectedItem());
           st1.setString(2,jTextFieldDate.getText());
           ResultSet rs1 = st1.executeQuery();
           while(rs1.next())
           {
               jTextFieldAbsent.setText(rs1.getString("count(*)"));
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
        
        }
        
        else if(jComboBoxStudentName.getSelectedItem()!="Select" && jComboBoxBatchCode.getSelectedItem()=="Select" && jTextFieldDate!=null)
        {
        try
        {
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select * from attendance where stud_name=? and date=?";
           PreparedStatement st = conn.prepareStatement(sql);
           
           st.setString(1, (String)jComboBoxStudentName.getSelectedItem());
           st.setString(2, jTextFieldDate.getText());
           ResultSet rs = st.executeQuery();
           
           DefaultTableModel model = (DefaultTableModel)jTableReport.getModel();
        while(model.getRowCount()>0)
        {
            for(int i = 0;i<model.getRowCount();i++)
            {
                model.removeRow(i);
            }
        }
           
           while(rs.next())
           {
               String batch = rs.getString("batch_code");
               String stud_id = rs.getString("stud_id");
               String stud_name = rs.getString("stud_name");
               String att = rs.getString("stud_attendance");
               String date = rs.getString("date");
               
               String tbData[] = {batch,stud_id,stud_name,att,date};
               DefaultTableModel tblModel = (DefaultTableModel)jTableReport.getModel();
               
               //Add data
               tblModel.addRow(tbData);
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
        try
        {
           Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select count(*) from attendance where stud_attendance='Present' and stud_name = ? and date=?";
           PreparedStatement st = conn.prepareStatement(sql);
           st.setString(1,(String)jComboBoxStudentName.getSelectedItem());
           st.setString(2,jTextFieldDate.getText());
           ResultSet rs = st.executeQuery();
           while(rs.next())
           {
               jTextFieldPresent.setText(rs.getString("count(*)"));
           }
           
           String sql1 = "select count(*) from attendance where stud_attendance='Absent' and stud_name = ? and date=?";
           PreparedStatement st1 = conn.prepareStatement(sql1);
           st1.setString(1,(String)jComboBoxStudentName.getSelectedItem());
           st1.setString(2,jTextFieldDate.getText());
           ResultSet rs1 = st1.executeQuery();
           while(rs1.next())
           {
               jTextFieldAbsent.setText(rs1.getString("count(*)"));
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
        }
        
        else if(jComboBoxStudentName.getSelectedItem()!="Select" && jComboBoxBatchCode.getSelectedItem()!="Select" && jTextFieldDate!=null)
        {
        try
        {
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select * from attendance where batch_code=? and stud_name=? and date=?";
           PreparedStatement st = conn.prepareStatement(sql);
           
           st.setString(1, (String)jComboBoxBatchCode.getSelectedItem());
           st.setString(2, (String)jComboBoxStudentName.getSelectedItem());
           st.setString(3, jTextFieldDate.getText());
           ResultSet rs = st.executeQuery();
           
           DefaultTableModel model = (DefaultTableModel)jTableReport.getModel();
        while(model.getRowCount()>0)
        {
            for(int i = 0;i<model.getRowCount();i++)
            {
                model.removeRow(i);
            }
        }
           
           while(rs.next())
           {
               String batch = rs.getString("batch_code");
               String stud_id = rs.getString("stud_id");
               String stud_name = rs.getString("stud_name");
               String att = rs.getString("stud_attendance");
               String date = rs.getString("date");
               
               String tbData[] = {batch,stud_id,stud_name,att,date};
               DefaultTableModel tblModel = (DefaultTableModel)jTableReport.getModel();
               
               //Add data
               tblModel.addRow(tbData);
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
        try
        {
           Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select count(*) from attendance where stud_attendance='Present' and batch_code = ? and stud_name = ? and date=?";
           PreparedStatement st = conn.prepareStatement(sql);
           st.setString(1,(String)jComboBoxBatchCode.getSelectedItem());
           st.setString(2,(String)jComboBoxStudentName.getSelectedItem());
           st.setString(3,jTextFieldDate.getText());
           ResultSet rs = st.executeQuery();
           while(rs.next())
           {
               jTextFieldPresent.setText(rs.getString("count(*)"));
           }
           
           String sql1 = "select count(*) from attendance where stud_attendance='Absent' and batch_code = ? and stud_name = ? and date=?";
           PreparedStatement st1 = conn.prepareStatement(sql1);
           st1.setString(1,(String)jComboBoxBatchCode.getSelectedItem());
           st1.setString(2,(String)jComboBoxStudentName.getSelectedItem());
           st1.setString(3,jTextFieldDate.getText());
           ResultSet rs1 = st1.executeQuery();
           while(rs1.next())
           {
               jTextFieldAbsent.setText(rs1.getString("count(*)"));
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        
        
        
        }      
        
    }//GEN-LAST:event_jButtonFilterActionPerformed

    private void jButtonShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowAllActionPerformed
       jTextFieldPercentage.setText(null);
        try
        {
            Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select * from attendance";
           PreparedStatement st = conn.prepareStatement(sql);
           ResultSet rs = st.executeQuery();
           
          jTableReport.removeAll();
           while(rs.next())
           {
               String batch = rs.getString("batch_code");
               String stud_id = rs.getString("stud_id");
               String stud_name = rs.getString("stud_name");
               String att = rs.getString("stud_attendance");
               String date = rs.getString("date");
               
               String tbData[] = {batch,stud_id,stud_name,att,date};
               DefaultTableModel tblModel = (DefaultTableModel)jTableReport.getModel();
               
               //Add data
               tblModel.addRow(tbData);
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }
        try
        {
           Connection conn = null;
           conn = DriverManager.getConnection(url, username, pass);
           
           String sql = "select count(*) from attendance where stud_attendance='Present'";
           PreparedStatement st = conn.prepareStatement(sql);
           ResultSet rs = st.executeQuery();
           while(rs.next())
           {
               jTextFieldPresent.setText(rs.getString("count(*)"));
           }
           
           String sql1 = "select count(*) from attendance where stud_attendance='Absent'";
           PreparedStatement st1 = conn.prepareStatement(sql1);
           ResultSet rs1 = st1.executeQuery();
           while(rs1.next())
           {
               jTextFieldAbsent.setText(rs1.getString("count(*)"));
           }
        }
        catch(SQLException e)
        {
            System.out.println(e);
        } 
    }//GEN-LAST:event_jButtonShowAllActionPerformed

    private void jButtonClearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearTableActionPerformed
        jTextFieldPresent.setText(null);
        jTextFieldAbsent.setText(null);
        jTextFieldPercentage.setText(null);
        DefaultTableModel model = (DefaultTableModel)jTableReport.getModel();
        while(model.getRowCount()>0)
        {
            for(int i = 0;i<model.getRowCount();i++)
            {
                model.removeRow(i);
            }
        }
    }//GEN-LAST:event_jButtonClearTableActionPerformed

    private void jButtonAttendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAttendanceActionPerformed
        new GiveAttendance(s,s2).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonAttendanceActionPerformed

    private void jTextFieldDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDateFocusGained
        if(jTextFieldDate.getText().equals("YYYY-MM-DD"))
        {
            jTextFieldDate.setText("");
            jTextFieldDate.setForeground(new Color(153,153,153));
        }
      
    }//GEN-LAST:event_jTextFieldDateFocusGained

    private void jTextFieldDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDateFocusLost
        if(jTextFieldDate.getText().equals(""))
        {
            jTextFieldDate.setText("YYYY-MM-DD");
            jTextFieldDate.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_jTextFieldDateFocusLost

    private void jButtonReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReportActionPerformed
        new TeacherReport(s,s2).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonReportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeacherReport(null,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAttendance;
    private javax.swing.JButton jButtonClearTable;
    private javax.swing.JButton jButtonDetails;
    private javax.swing.JButton jButtonFilter;
    private javax.swing.JButton jButtonLogOut;
    private javax.swing.JButton jButtonReport;
    private javax.swing.JButton jButtonShowAll;
    private javax.swing.JComboBox<String> jComboBoxBatchCode;
    private javax.swing.JComboBox<String> jComboBoxStudentName;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelBatchCode;
    private javax.swing.JLabel jLabelDate;
    private javax.swing.JLabel jLabelStudName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableReport;
    private javax.swing.JTextField jTextFieldAbsent;
    private javax.swing.JTextField jTextFieldDate;
    private javax.swing.JTextField jTextFieldPercentage;
    private javax.swing.JTextField jTextFieldPresent;
    // End of variables declaration//GEN-END:variables
}
